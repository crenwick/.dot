call plug#begin()

source ~/.vim/bundlesBothVimRc
source ~/.vim/bundlesNeoVimRc

call plug#end()

" -----------------------------------------------------
" General
" -----------------------------------------------------

set nocompatible      " not compatible with vi
set autoread          " reload files when changed on disk

let mapleader = "\<Space>"
let g:mapleader = "\<Space>"

set title             " Set terminal title              " Set terminal title
set history=500

" Tab control
set softtabstop=2     " insert mode tab and backspace uses 2 spaces
set shiftwidth=2      " normal mode indentation commands uses 2 spaces

set mouse=a           " click tabs, drag tabs, and drag split bars
set clipboard=unnamed " yank and paste with the system clipboard

" Code folding settings
set foldmethod=indent
set nofoldenable      " Remove ugly folds

" -----------------------------------------------------
" User Interface
" -----------------------------------------------------
set wildmenu          " enhanced command line completion
set wildmode=longest,list,full
set hidden            " allow buffer to be hidden when writing to disk
set scrolloff=5       " show context above/below cursor line
set shell=$SHELL

" Searching
set ignorecase        " case-insensitive search
set smartcase         " case-sensitive search if any caps
set hlsearch
set incsearch         " search as you type

set showmatch         " highlight matching on {[()]}
set mat=2             " how many tenths of a second to blink

" Error bells
set noerrorbells
set visualbell

syntax on             " enable syntax highlighting

" Theme
set encoding=utf8
let base16colorspace=256
set t_Co=256          " explicitly tell vim the terminal supports 256
set background=dark
colorscheme base16-chalk

set number

set autoindent        " automatically set indent of new line
set smartindent

" highlight the 80st character in each line
highlight MyLineTooLongMarker ctermbg=magenta guibg=Magenta
autocmd WinEnter * match MyLineTooLongMarker '\%81v'

" -----------------------------------------------------
" Files, backups and undo
" -----------------------------------------------------
set noswapfile        " Don't make backups.
set nowritebackup     " Even if you did make a backup, don't keep it around.
set nobackup

" -----------------------------------------------------
" Statusline
" -----------------------------------------------------

set laststatus=2      " show the status line all the time

" -----------------------------------------------------
" Mappings
" -----------------------------------------------------

" hjkl keys navigate buffer splits
noremap <C-h> <C-w>h
noremap <C-j> <C-w>j
noremap <C-k> <C-w>k
noremap <C-l> <C-w>l

" to save all files
nnoremap <Leader>w :wa<CR>
" enter visual line mode:
nmap <Leader><Leader> V

" -----------------------------------------------------
" Plugins
" -----------------------------------------------------

" :ultisnips
let g:UltiSnipsSnippetsDir='~/.vim'
let g:UltiSnipsSnippetDirectories=['myUltiSnippets']

" :NERDTree and :NERDTreeTabs
nnoremap <leader>d :NERDTreeTabsToggle<CR>
nnoremap <leader>f :NERDTreeTabsFind<CR>
" nice arrow
let g:NERDTreeDirArrows = 1
" not so much cruft
let g:NERDTreeMinimalUI = 1
let g:NERDTreeShowBookmarks = 1
hi def link NERDTreeRO Normal
hi def link NERDTreePart StatusLine
hi def link NERDTreeDirSlash Directory
hi def link NERDTreeCurrentNode Search
hi def link NERDTreeCWD Normal
" Not so much color
let g:NERDChristmasTree = 0

" :NERDTreeTabs
" don't auto open NERDTree
let g:nerdtree_tabs_open_on_gui_startup = 1

" :CtrlP
nnoremap <leader>t :CtrlP<CR>
nnoremap <leader>T :CtrlPClearCache<CR>:CtrlP<CR>

" :dragvisuals
vmap  <expr>  <LEFT>   DVB_Drag('left')
vmap  <expr>  <RIGHT>  DVB_Drag('right')
vmap  <expr>  <DOWN>   DVB_Drag('down')
vmap  <expr>  <UP>     DVB_Drag('up')
" Remove any introduced trailing whitespace after moving
let g:DVB_TrimWS = 1
